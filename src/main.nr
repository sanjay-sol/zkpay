fn main(msg_hash: [u8; 32], signature: [u8; 64], pubkey_x: [u8; 32], pubkey_y: [u8; 32]) {
    let sig_valid: bool =
        std::ecdsa_secp256k1::verify_signature(pubkey_x, pubkey_y, signature, msg_hash);
    // sig_valid
    assert(sig_valid == true)
}

// #[test]
// fn test_valid_signature() {
//     let msg_hash: [u8; 32] = [
//         0xa0, 0x88, 0xa6, 0x01, 0x43, 0xf2, 0x6c, 0x71, 0x52, 0xdc, 0xd5, 0x73, 0x50, 0xd1, 0x90,
//         0x20, 0xb8, 0xff, 0x99, 0xce, 0xb6, 0x04, 0xf6, 0x1a, 0xdb, 0xc9, 0x36, 0x42, 0x05, 0x4e,
//         0x58, 0xdc,
//     ];

//     let signature: [u8; 64] = [
//         0x7f, 0xba, 0x2d, 0x30, 0x55, 0x7d, 0xc5, 0xee, 0xd8, 0xe9, 0x4b, 0x9e, 0xde, 0x5d, 0x3e,
//         0xc1, 0xfd, 0xad, 0x5c, 0x59, 0xef, 0x1f, 0x06, 0xbd, 0x6f, 0x12, 0x47, 0x96, 0xc1, 0x55,
//         0xd4, 0x06, 0x23, 0x9b, 0xbe, 0x01, 0x2c, 0x06, 0x2c, 0xc2, 0x10, 0x52, 0x84, 0xad, 0xbf,
//         0xdd, 0x9c, 0xba, 0x7e, 0x79, 0xa6, 0x3a, 0x05, 0x0d, 0x98, 0xa8, 0x7e, 0xc4, 0x76, 0xb3,
//         0x52, 0x47, 0x7e, 0xf0,
//     ];

//     let pubkey_x: [u8; 32] = [
//         0x85, 0x8c, 0x77, 0x9a, 0xb7, 0xf6, 0x79, 0xe5, 0x9c, 0x5e, 0x6f, 0x3c, 0x6c, 0x2f, 0xdf,
//         0x58, 0xa2, 0x22, 0xdf, 0x2d, 0x0d, 0xc6, 0xaa, 0x1a, 0xcf, 0x19, 0xbd, 0x03, 0xe7, 0xf1,
//         0xbf, 0xa7,
//     ];

//     let pubkey_y: [u8; 32] = [
//         0x55, 0x4b, 0xe6, 0xdf, 0xd3, 0x71, 0x70, 0x95, 0xdc, 0x2f, 0x1f, 0xd4, 0xcf, 0x01, 0x6b,
//         0x80, 0xb2, 0x78, 0xf7, 0x8a, 0x56, 0x3b, 0x52, 0xa3, 0x3e, 0x5c, 0xc9, 0xa9, 0x75, 0x86,
//         0xf8, 0x3f,
//     ];
//     main(msg_hash, signature, pubkey_x, pubkey_y);

//     // assert(main(msg_hash, signature, pubkey_x, pubkey_y) == true);
// }
